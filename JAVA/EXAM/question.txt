#1 -> Create an abstract class “Vehicle” with abstract methods “start()” and “stop()”. 
Implement two subclasses “Car” and “Motorcycle” which extend “Vehicle” and implement the abstract methods. 
Create a “Driver” class which contains a list of “Vehicle” objects. Add methods to the “Driver” class to start and stop all vehicles. 
Create objects of all classes and test their behavior.

#2 -> Create an abstract class “Shape” with abstract methods “getArea()” and “getPerimeter()”. 
Implement two subclasses “Rectangle” and “Circle” which extend “Shape” and implement the abstract methods. 
Create a “Square” class which extends “Rectangle” and overrides the necessary methods. Create objects of all classes and test their behavior.

#3 -> Create an abstract class “BankAccount” with abstract methods “deposit()” and “withdraw()”. 
Implement two subclasses “SavingsAccount” and “CheckingAccount” which extend “BankAccount” and implement the abstract methods.
 Create a “Customer” class which contains a list of “BankAccount” objects. 
 Add methods to the “Customer” class to display account balances, deposit/withdraw money, etc. 
 Create objects of all classes and test their behavior.

#4 -> Create an abstract class “Account” with abstract method “calculateInterest()”.
 Implement two subclasses “SavingsAccount” and “CurrentAccount” which extend “Account” and implement the “calculateInterest()” method. 
 Create objects of both classes and test their behavior.

#5 -> An abstract class called “Marks” is needed to calculate the percentage of marks earned by students A in three subjects 
(with each subject out of 100) and student B in four subjects (with each subject out of 100). 
This class must contain the abstract method “getPercentage,” which two other classes, “A” and “B,” will inherit. 
The method “getPercentage,” which provides the percentage of students, is shared by classes “A” and “B.”

The constructor of class ‘A’ will accept the marks obtained in three subjects as its parameters and the constructor of class ‘B’ will accept the marks 
obtained in four subjects as its parameters. To test the implementation, objects for both the classes need to be created and the percentage of marks 
for each student should be printed.

#6 -> Create an abstract class “Employee” with abstract methods “calculateSalary()” and “displayEmployeeDetails()”. Implement two subclasses “Manager” and “Worker” 
which extend “Employee” and implement the abstract methods. Create a “SalesPerson” class which extends “Manager” and overrides the necessary methods. 
Create objects of all classes and test their behavior.


#7 -> Write an abstract class Worker and derive classes DailyWorker and SalariedWorker from it.Every worker has a name and a salary rate. 
Write an abstract method comPay( ) to computethe weekly pay of every worker. 
A DailyWorker is paid on the basis of number of days which is to be clculated from the hours he/she works weekly. 
The SalariedWorker gets paid the wage for a week no matter what actual hours are. 
Test this program to calculate the weekly pay of workers. Use concept of dynamic polymorphism to write this program.
